version: 2
workflows:
  version: 2
  test:
    jobs:
      - halo-factory
      - halo-pair
      - halo-router
      - halo-token
      - lint
      - coverage
      - wasm-build

jobs:
  halo-factory:
    docker:
      - image: rust:1.65.0
    working_directory: ~/project/contracts/halo-factory
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-halo-factory-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-halo-factory-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}

  halo-pair:
    docker:
      - image: rust:1.65.0
    working_directory: ~/project/contracts/halo-pair
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-halo-pair-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-halo-pair-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
  
  halo-router:
    docker:
      - image: rust:1.65.0
    working_directory: ~/project/contracts/halo-router
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-halo-router-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-halo-router-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
  
  halo-token:
    docker:
      - image: rust:1.65.0
    working_directory: ~/project/contracts/halo-token
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-halo-token-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-halo-token-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}

  lint:
    docker:
      - image: rust:1.65.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.65.0-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.65.0-{{ checksum "Cargo.lock" }}

  coverage:
    machine: true
    steps:
      - checkout
      - run:
          name: Coverage using docker
          command: docker run -e CI=true -e CODECOV_TOKEN=${CODECOV_TOKEN} --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin:0.22.0 bash -c "cargo tarpaulin --release --ignore-tests -o Xml && bash <(curl -s https://codecov.io/bash)"

  # This runs one time on the top level to ensure all contracts compile properly into wasm.
  # We don't run the wasm build per contract build, and then reuse a lot of the same dependencies, so this speeds up CI time
  # for all the other tests.
  # We also sanity-check the resultant wasm files.
  wasm-build:
    docker:
      - image: rust:1.65.0
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-wasm-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown
      - run:
          name: Build Wasm Release
          command: |
            for C in ./contracts/*/
            do
              echo "Compiling `basename $C`..."
              (cd $C && cargo build --release --target wasm32-unknown-unknown --locked)
            done
      - run:
          name: Install check_contract
          # Uses --debug for compilation speed
          command: cargo install --debug --version 1.1.0 --locked -- cosmwasm-check
      - save_cache:
          paths:
            - /usr/local/cargo/registry
          key: cargocache-wasm-rust:1.65.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Check wasm contracts
          command: cosmwasm-check ./target/wasm32-unknown-unknown/release/*.wasm

